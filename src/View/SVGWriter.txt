USING THE SVGWRITER CLASS:
1. There are two different constructors for SVGWriter. Since we're using the Colorado map, use:
    SVGWriter(String filename) (filename is the name of the existing SVG/the colorado map)
    This will read in the Colorado map and allow you to add elements on top of it.

2. Using groups:
    To make the SVG more readable, I recommend adding groups to it in the same way the 
    SVG example Dave gave does. 
    To create a group, you just need to call the newGroup method.
    All content added after the newGroup call will be placed in the group
    Call endGroup to close the group with a </g> tag. You must end the group
    Because of the way addTitle and addFooter are currently implemented, the title and footer
    of the SVG cannot be grouped. Don't bother trying unless you want an empty group on the SVG. 

2. Adding a title to the SVG:
    Since we're using an existing SVG, it must be surrounded with blank space so there's room for a header and footer
    padSVG() pads the SVG image to accomplish this 
    You can then add a title using the addTitle method. Its use is detailed in the comments above the method 

3. Adding a footer to the SVG:
    Assuming the SVG has already been padded, just use the addFooter method 

4. Adding lines to the SVG:
    The signature for addLine is as follows:
    public void addLine(int x1, int y1, int x2, int y2, String color, int width, boolean map);
    This is mostly self explanatory. For geographic coordinates to converted correctly, 
    the boolean map MUST BE SET TO TRUE (very important) (all caps to denote importance)
    Right now, the lines drawn are the same color as in the example Dave gave. This may
    change for readability's sake.

5. Labeling the lines:
    Call addLineLabel with the same geographic coordinates used to create the line. 

6. Adding labels at a point:
    This will be useful for cases where the "show ID" or the "show name" command line arguments are set 
    Call addLabel. This uses geographic coordinates as well

7. Finalizing the SVG:
    To write the queued up SVG to a file, call writeSVG with the name of the file you wish to write to. 